---
- name: ensure PHP packages are installed
  yum:
    name:
      - php
      - php-ldap
      - php-mcrypt
      - php-mbstring
    state: installed
  when: openldap_master_install_php
  tags: ['openldap_master']

# config PLA
- name: Install phpLDAPadmin
  unarchive:
    src: "https://github.com/leenooks/phpLDAPadmin/archive/{{ openldap_master_pla_version }}.tar.gz"
    dest: "{{ openldap_master_webserver_root }}"
    remote_src: "yes"
    creates: "{{ openldap_master_webserver_root }}/phpLDAPadmin-{{ openldap_master_pla_version }}"
    owner: root
    group: "{{ openldap_master_webserver_group }}"
    mode: 0750
  tags: ['openldap_master']

- name: create ldap-admin symlink
  file:
    src: "{{ openldap_master_webserver_root }}/phpLDAPadmin-{{ openldap_master_pla_version}}"
    dest: "{{ openldap_master_webserver_root }}/ldap-admin"
    owner: root
    group: root
    state: link
  tags: ['openldap_master']

- name: ensure ldap admin httpd config is in place
  template:
    src: "etc.httpd.conf.d.ldap-admin.conf.j2"
    dest: "/etc/httpd/conf.d/ldap-admin.conf"
    owner: root
    group: root
    mode: 0640
  notify: reload httpd
  when: openldap_master_configure_webserver
  tags: ['openldap_master']

- name: ensure PLA config is in place
  template:
    src: "ldap-admin.config.config.php.j2"
    dest: "{{ openldap_master_webserver_root }}/ldap-admin/config/config.php"
    owner: root
    group: "{{ openldap_master_webserver_group }}"
    mode: 0640
  tags: ['openldap_master']

- name: ensure PLA templates are in place
  template:
    src: "ldap-admin.templates.creation.{{ item }}.j2"
    dest: "{{ openldap_master_webserver_root }}/ldap-admin/templates/creation/{{ item }}"
    owner: root
    group: "{{ openldap_master_webserver_group }}"
    mode: 0640
  with_items: "{{ openldap_master_pla_templates }}"

- name: ensure unwanted PLA templates are removed
  file:
    path: "{{ openldap_master_webserver_root }}/ldap-admin/templates/creation/{{ item }}"
    state: absent
  with_items: "{{ openldap_master_pla_remove_templates }}"

# config password reset
- name: Install SelfService Password Reset
  unarchive:
    src: "https://github.com/ltb-project/self-service-password/archive/v{{ openldap_master_ssp_version }}.tar.gz"
    dest: "{{ openldap_master_webserver_root }}"
    remote_src: 'yes'
    creates: "{{ openldap_master_webserver_root }}/self-service-password-{{ openldap_master_pla_version}}"
    owner: root
    group: "{{ openldap_master_webserver_group }}"
    mode: 0750
  tags: ['openldap_master']

- name: create ldap-admin symlink
  file:
    src: "{{ openldap_master_webserver_root }}/self-service-password-{{ openldap_master_pla_version}}"
    dest: "{{ openldap_master_webserver_root }}/ldap-reset"
    owner: root
    group: root
    state: link
  tags: ['openldap_master']

- name: ensure ldap reset apache config is in place
  template:
    src: "etc.httpd.conf.d.ldap-reset.conf.j2"
    dest: "/etc/httpd/conf.d/ldap-reset.conf"
    owner: root
    group: root
    mode: 0640
  notify: reload httpd
  when: openldap_master_configure_webserver
  tags: ['openldap_master']

- name: copy logo source
  get_url:
    url: "{{ openldap_master_logo_url }}"
    dest: "{{ openldap_master_webserver_root }}/ldap-reset/logo.png"
    owner: root
    group: "{{ openldap_master_webserver_group }}"
    mode: 0640
  when: openldap_master_reset_logo_url is defined
  tags: ['openldap_master']

- name: ensure LDAP reset PHP config is in place
  template:
    src: "ldap-reset.conf.config.inc.local.php.j2"
    dest: "{{ openldap_master_webserver_root }}/ldap-reset/conf/config.inc.local.php"
    owner: root
    group: apache
    mode: 0640
  tags: ['openldap_master']

- name: create auth_master files directory
  file:
    path: /opt/auth_master
    owner: root
    group: root
    mode: 0700
    state: directory
  when: openldap_master_password_expiration_emails|default(false)
  tags: ['openldap_master']

- name: place auth_master scripts
  template:
    src: "opt.auth_master.sendPasswordExpirationEmails.sh.j2"
    dest: /opt/auth_master/sendPasswordExpirationEmails.sh
    owner: root
    group: root
    mode: 0700
  when: openldap_master_password_expiration_emails|default(False)
  tags: ['openldap_master']

- name: enable password expiration email cron
  cron:
    name: "auth_master-sendPasswordExpirationEmails"
    minute: 0
    hour: 0
    user: "root"
    job: "/opt/auth_master/sendPasswordExpirationEmails.sh"
    cron_file: "auth_master-sendPasswordExpirationEmails"
  when: openldap_master_password_expiration_emails|default(False)
  tags: ['openldap_master']
